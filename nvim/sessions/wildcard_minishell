let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/minishell/code/srcs
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +133 parsing/transform/wildcard_bonus.c
badd +129 parsing/transform/wildcard_tools_bonus.c
badd +1 ~/minishell/code/includes/struct_bonus.h
badd +40 ~/minishell/code/includes/mini_shell.h
badd +101 parsing/transform/wildcard_checker.c
badd +1 parsing/transform/wildcard_tools2_bonus.c
badd +79 exec/exec.c
badd +47 exec/exec_bonus.c
badd +0 parsing/transform/wildcard_tools1_bonus.c
argglobal
%argdel
$argadd parsing/transform/wildcard_bonus.c
$argadd parsing/transform/wildcard_tools_bonus.c
edit parsing/transform/wildcard_tools1_bonus.c
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 117 + 117) / 234)
exe 'vert 2resize ' . ((&columns * 116 + 117) / 234)
argglobal
if bufexists("parsing/transform/wildcard_tools1_bonus.c") | buffer parsing/transform/wildcard_tools1_bonus.c | else | edit parsing/transform/wildcard_tools1_bonus.c | endif
if &buftype ==# 'terminal'
  silent file parsing/transform/wildcard_tools1_bonus.c
endif
balt exec/exec_bonus.c
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 1 - ((0 * winheight(0) + 27) / 55)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
wincmd w
argglobal
if bufexists("parsing/transform/wildcard_tools2_bonus.c") | buffer parsing/transform/wildcard_tools2_bonus.c | else | edit parsing/transform/wildcard_tools2_bonus.c | endif
if &buftype ==# 'terminal'
  silent file parsing/transform/wildcard_tools2_bonus.c
endif
balt parsing/transform/wildcard_checker.c
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 1 - ((0 * winheight(0) + 27) / 55)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 117 + 117) / 234)
exe 'vert 2resize ' . ((&columns * 116 + 117) / 234)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOFI
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
